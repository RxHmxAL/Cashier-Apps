#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 5.3
#  in conjunction with Tcl version 8.6
#    Jul 18, 2020 07:49:44 AM WIB  platform: Linux

import sys
import os
import time
try:
    import Tkinter as tk
    from tkinter import messagebox, filedialog
except ImportError:
    import tkinter as tk
    from tkinter import messagebox, filedialog

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True




def set_Tk_var():
    global ev_nama
    ev_nama = tk.StringVar()
    global ev_jumlah
    ev_jumlah = tk.StringVar()
    global ev_harga
    ev_harga = tk.StringVar()
    global ev_total
    ev_total = tk.StringVar()
    ev_total.set('Rp. 0')

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top


def add():
    try:
        name   = w.e_name.get()
        amount = int(w.e_amount.get())
        price  = int(w.e_price.get())
        total = int(amount*price)
        
        
        w.trv.insert('', 'end', iid = None, text = 'â€¢  ',values = [name, amount, price, total])
    
        w.e_name.delete(0, 'end')
        w.e_amount.delete(0, 'end')
        w.e_price.delete(0, 'end')

        value_total()
        messagebox.showinfo('Success', 'Data Added')

        print('test_support.add')
        sys.stdout.flush()
    except ValueError as e:
        w.e_name.delete(0, 'end')
        w.e_amount.delete(0, 'end')
        w.e_price.delete(0, 'end')
        messagebox.showwarning('Warning', 'Invalid Input')
        print(e)


def exit():
    
    pop = messagebox.askquestion('Exit', 'Are You Sure?')
    if pop == 'no':
        pass
    else:
        print('test_support.exit')
        sys.stdout.flush()
        destroy_window()


def export():

    if len(w.trv.get_children()) == 0:
        return messagebox.showwarning('Warning','Canno\'t Export Empty Data')
    
    else:
        f = filedialog.asksaveasfile(mode = 'w+', filetypes = [('CSV', '.csv')])
        try:
            f.write('Name,Amount,Price,Total\n\n')
            for item in w.trv.get_children():
                name   = w.trv.item(item, 'values')[0]
                amount = int(w.trv.item(item, 'values')[1])
                price  = int(w.trv.item(item, 'values')[2])
                total  = int(w.trv.item(item, 'values')[3])
                sum_t.append(total)
                f.write(f'{str(name)},{str(amount)},Rp.{str(price)},Rp.{str(total)}\n')
            f.write(f'\n\nTotal,,,Rp.{str(sum(sum_t))}')
            f.close()
            for a in w.trv.get_children():
                w.trv.delete(a)
            messagebox.showinfo('Success','Data Exported')

        except:
            pass
        print('test_support.export')
        sys.stdout.flush()

    
    value_total()


def remove():

    item_r = w.trv.selection()
    if len(item_r) == 0:
        messagebox.showwarning('Warning', 'Select An Item')
    else:
        pop = messagebox.askyesno('Delete Item', 'Are You Sure?', icon = 'question')
        if pop == True:
            w.trv.delete(item_r)
            messagebox._show('Success', 'Item Removed', icon = None)
        print('test_support.remove')
        sys.stdout.flush()
    value_total()
    


def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

def value_total():
    v_total = 0

    for chl in w.trv.get_children():
        v_total += float(w.trv.item(chl, 'values')[3])
    
    ev_total.set(f'Rp. {int(v_total)}')
    

if __name__ == '__main__':
    import test
    test.vp_start_gui()
